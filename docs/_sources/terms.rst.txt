Terms
=====

.. _external_representation:

External Representation
-----------------------

The type and format of a hashable iterable used by the ``_encode`` and ``_decode`` methods of Path objects. This is specific to each Path subclass.

    **TuplePath**
    ::

        ("key1", "key2", "key3")

    **DelimitedStrPath**
    ::

        "key1.key2.key3"

.. _tuple_path_notation:

Tuple Path Notation
-------------------

The :ref:`external representation<external_representation>` of ``TuplePath``.

    ::

        ("key1", "key2", "key3")

.. _delimited_string_path_notation:

Delimited String Path Notation
------------------------------

The :ref:`external representation<external_representation>` of ``DelimitedStrPath``.

    ::

        "key1.key2.key3"

.. _nested_data:

Nested Data
-----------

Container type data that has other container types as values.

    ::
      
      {
        "make": "Ford",
        "model": "Bronco",
        "exterior": {
          "color": "blue",
          "trim": {
            "level": "base"
          }
        }
      }

.. _path:

Path
----

An group of :ref:`path segments<path_segment>` that represent a location within a :ref:`nested data <nested_data>` structure.

    ::

        "key1.key2.key3"

.. _path_segment:

Path Segment
------------

A single piece of a :ref:`path <path>`.

    ::
    
      >>> from delimited.path import DelimitedStrPath
      >>> d = DelimitedStrPath("key1.key2.key3")
      >>> d[1]
      
      "key2" # this is a path segment
